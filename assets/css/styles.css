@charset "UTF-8";
/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */
html {
  font-family: sans-serif;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%; }

body {
  margin: 0; }

article, aside, details, figcaption, figure, footer, header, hgroup, main, menu, nav, section, summary {
  display: block; }

audio, canvas, progress, video {
  display: inline-block;
  vertical-align: baseline; }

audio:not([controls]) {
  display: none;
  height: 0; }

[hidden], template {
  display: none; }

a {
  background-color: transparent; }

a:active, a:hover {
  outline: 0; }

abbr[title] {
  border-bottom: 1px dotted; }

b, strong {
  font-weight: bold; }

dfn {
  font-style: italic; }

h1 {
  font-size: 2em;
  margin: .67em 0; }

mark {
  background: #ff0;
  color: #000; }

small {
  font-size: 80%; }

sub, sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

img {
  border: 0; }

svg:not(:root) {
  overflow: hidden; }

figure {
  margin: 1em 40px; }

hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  height: 0; }

pre {
  overflow: auto; }

code, kbd, pre, samp {
  font-family: monospace,monospace;
  font-size: 1em; }

button, input, optgroup, select, textarea {
  color: inherit;
  font: inherit;
  margin: 0; }

button {
  overflow: visible; }

button, select {
  text-transform: none; }

button, html input[type="button"], input[type="reset"], input[type="submit"] {
  -webkit-appearance: button;
  cursor: pointer; }

button[disabled], html input[disabled] {
  cursor: default; }

button::-moz-focus-inner, input::-moz-focus-inner {
  border: 0;
  padding: 0; }

input {
  line-height: normal; }

input[type="checkbox"], input[type="radio"] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  padding: 0; }

input[type="number"]::-webkit-inner-spin-button, input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

input[type="search"] {
  -webkit-appearance: textfield;
  -webkit-box-sizing: content-box;
          box-sizing: content-box; }

input[type="search"]::-webkit-search-cancel-button, input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

fieldset {
  border: 1px solid silver;
  margin: 0 2px;
  padding: .35em .625em .75em; }

legend {
  border: 0;
  padding: 0; }

textarea {
  overflow: auto; }

optgroup {
  font-weight: bold; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

td, th {
  padding: 0; }

/*-----------------------------------*
  $TOAST-GRID

  An insane grid.
  You'd be mad to use it.

  Usage
  =====

  Assuming default values:

  <div class="grid">
    <div class="grid__col grid__col--1-2">
      A half-width column.
    </div>
    <div class="grid__col grid__col--1-4 grid__col--pull-1-4">
      A quarter, pulled left by its own width. You get this, right?
    </div>
  </div>


  Customisation
  =============

  $toast-grid-namespace and $toast-grid-column-namespace
  adjusts the class names for the grid. With
  default values, grid wrappers have a class
  of '.grid' and columns '.grid__col'.

  $toast-col-groups(n) adjusts column divisions.
  For example, $toast-col-groups(12) will produce
  a 12-column grid. $col-groups(3,6,8)
  will produce a 3-, 6-, and 8-column grid.

  $toast-gutter-width is—you guessed it—the gutter
  width. Accepts any unit.

  That's it. Have fun.

\*-----------------------------------*/
.row {
  list-style: none;
  margin-left: -20px; }

.col-4 {
  width: 100%; }

.col-2 {
  width: 50%; }

.col-1 {
  width: 25%; }

.col-3 {
  width: 75%; }

.col {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  display: inline-block;
  min-height: 1px;
  padding-left: 20px;
  vertical-align: top; }
  @media (max-width: 768px) {
    .col {
      display: block;
      margin-left: 0;
      margin-right: 0;
      width: auto; } }
  @media (max-width: 768px) and (min-width: 480px) {
    .col[class*="colm-"] {
      display: inline-block; }
    .col.colm-2 {
      width: 50%; }
    .col.colm-1-3 {
      width: 33.33333%; }
    .col.colm-2-3 {
      width: 66.66667%; }
    .col.colm-1 {
      width: 25%; }
    .col.colm-3 {
      width: 75%; } }
  @media (max-width: 480px) {
    .col[class*="cols-"] {
      display: inline-block; }
    .col.cols-2 {
      width: 50%; }
    .col.cols-1-3 {
      width: 33.33333%; }
    .col.cols-2-3 {
      width: 66.66667%; }
    .col.cols-1 {
      width: 25%; }
    .col.cols-3 {
      width: 75%; } }

.col-centered {
  display: block;
  margin-left: auto;
  margin-right: auto; }

.col-d-first {
  float: left; }

.col-d-last {
  float: right; }

.row-no-gutter {
  margin-left: 0;
  width: 100%; }
  .row-no-gutter .col {
    padding-left: 0; }
  .row-no-gutter .col-span-all {
    margin-left: 0;
    width: 100%; }

.col-ab {
  vertical-align: bottom; }

.col-am {
  vertical-align: middle; }

.container {
  margin-right: auto;
  margin-left: auto;
  padding-left: 10px;
  padding-right: 10px; }
  @media (min-width: 768px) {
    .container {
      width: 740px; } }
  @media (min-width: 992px) {
    .container {
      width: 960px; } }
  @media (min-width: 1200px) {
    .container {
      width: 1160px; } }

body {
  font-family: "roboto", sans-serif; }

.container-x {
  margin: 100px auto;
  max-width: 800px; }

.box {
  background: #e3e3e3;
  height: 30px;
  margin-bottom: 20px; }
  .box:hover {
    background-color: coral; }

.tall {
  height: 100px; }

.tinted {
  background-color: lightblue; }
